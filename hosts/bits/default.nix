{ inputs, overlays, ... }:

let
  globals =
    let baseName = "birgerrydback";
    in
    {
      user = "birgerrydback";
      fullName = "Birger Rydback";
      extraUserGroups = [
        "wheel"
        "networkmanager"
        "video"
        "docker"
      ];
    };
in
inputs.nixpkgs.lib.nixosSystem {
  system = "x86_64-linux";
  modules = [
    globals
    inputs.home-manager.nixosModules.home-manager
    ../../modules/common
    ../../modules/test-user
    ../../modules/system
    #../../modules/users
    {
      nixpkgs.overlays = overlays;

      networking.hostName = "bits-nixos";

      networking.wireless.enable = false;
      networking.networkmanager.enable = true;
      networking.useDHCP = false;

      #boot.kernelPackages = inputs.nixpkgs.linuxPackages_latest;
      boot.initrd.availableKernelModules =
        [ "nvme" "xhci_pci" "ahci" "thunderbolt" "usb_storage" "sd_mod" "sdhci_pci" ];
      boot.loader.systemd-boot.enable = true;
      boot.loader.systemd-boot.configurationLimit = 10;
      boot.loader.efi.efiSysMountPoint = "/boot";
      boot.loader.efi.canTouchEfiVariables = true;
      boot.loader.grub.useOSProber = true;
      boot.loader.grub.configurationLimit = 10;

      # Graphics and VMs
      boot.initrd.kernelModules = [ "amdgpu" ];
      boot.kernelModules = [ "kvm-amd" ];

      # Required binary blobs to boot on this machine
      hardware.enableRedistributableFirmware = true;

      # Prioritize performance over efficiency
      powerManagement.cpuFreqGovernor = "performance";

      # Allow firmware updates
      hardware.cpu.amd.updateMicrocode = true;
      # File systems must be declared in order to boot

      fileSystems = {
        "/" = {
          device = "/dev/disk/by-uuid/75ba9480-26dc-4602-8797-b1896f829acd";
          fsType = "ext4";
        };

        "/boot" = {
          device = "/dev/disk/by-uuid/D4CC-FF5B";
          fsType = "vfat";
        };
      };
      swapDevices = [{ device = "/dev/disk/by-uuid/08fd16ed-033c-456a-af0e-f16c933f08a3"; }];

      touchpad.enable = true;
      #fingerprint.enable = true;
      #firefox.enable = true;
      #graphics.enable = true;
      #sound.enable = true;
      #docker.enable = true;
      #bluetooth.enable = true;
      wayland.enable = true;
      #printers.enable = true;
      #power-management.enable = true;
      #diskEncryption = {
      #  enable = true;
      #  diskId = "f3fd4fdf-b8ef-45c7-8e96-2ca5bfe32cd9";
      #  headerId = "1abd4b51-8a97-4d04-97f1-326b2ef1dcbe";
      #};
      #firewall = {
      #  enable = true;
      #  tcpPorts = [ 8080 ];
      #};
      #git = {
      #  enable = true;
      #  userName = "BirgerRydback";
      #  userEmail = "birger.rydback@bits.bi";
      #};
      #general.enable = true;
      #communication.enable = true;
      #audio.enable = true;
      #neovim.enable = true;
      #alacritty.enable = true;
      #bash.enable = true;
      #fonts.enable = true;
      #kanshi.enable = true;
      #sway.enable = true;
      #waybar.enable = true;
      #development.enable = true;
    }
  ];
}


# Helps reduce GPU fan noise under idle loads
#hardware.fancontrol.enable = true;
#hardware.fancontrol.config = ''
#  # Configuration file generated by pwmconfig, changes will be lost
#  INTERVAL=10
#  DEVPATH=hwmon0=devices/pci0000:00/0000:00:03.1/0000:06:00.0/0000:07:00.0/0000:08:00.0
#  DEVNAME=hwmon0=amdgpu
#  FCTEMPS=hwmon0/pwm1=hwmon0/temp1_input
#  FCFANS= hwmon0/pwm1=hwmon0/fan1_input
#  MINTEMP=hwmon0/pwm1=50
#  MAXTEMP=hwmon0/pwm1=70
#  MINSTART=hwmon0/pwm1=100
#  MINSTOP=hwmon0/pwm1=10
#  MINPWM=hwmon0/pwm1=10
#  MAXPWM=hwmon0/pwm1=240
#'';

