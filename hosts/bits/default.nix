{ inputs, globals, overlays, ... }:

inputs.nixpkgs.lib.nixosSystem {
  system = "x86_64-linux";
  modules = [
    globals
    inputs.home-manager.nixosModules.home-manager
    ../../modules/common
    ../../modules/test-user
    {
      nixpkgs.overlays = overlays;

      # Hardware
      #physical = true;
      networking.hostName = "bits-nixos";

      # Not sure what's necessary but too afraid to remove anything
      boot.initrd.availableKernelModules =
        [ "nvme" "xhci_pci" "ahci" "thunderbolt" "usb_storage" "sd_mod" "sdhci_pci" ];
      boot.loader.systemd-boot.enable = true;
      boot.loader.systemd-boot.configurationLimit = 10;
      boot.loader.efi.efiSysMountPoint = "/boot";
      boot.loader.efi.canTouchEfiVariables = true;
      boot.loader.grub.useOSProber = true;
      boot.loader.grub.configurationLimit = 10;

      # Graphics and VMs
      boot.initrd.kernelModules = [ "amdgpu" ];
      boot.kernelModules = [ "kvm-amd" ];

      # Required binary blobs to boot on this machine
      hardware.enableRedistributableFirmware = true;

      # Prioritize performance over efficiency
      powerManagement.cpuFreqGovernor = "performance";

      # Allow firmware updates
      hardware.cpu.amd.updateMicrocode = true;

      # Helps reduce GPU fan noise under idle loads
      #hardware.fancontrol.enable = true;
      #hardware.fancontrol.config = ''
      #  # Configuration file generated by pwmconfig, changes will be lost
      #  INTERVAL=10
      #  DEVPATH=hwmon0=devices/pci0000:00/0000:00:03.1/0000:06:00.0/0000:07:00.0/0000:08:00.0
      #  DEVNAME=hwmon0=amdgpu
      #  FCTEMPS=hwmon0/pwm1=hwmon0/temp1_input
      #  FCFANS= hwmon0/pwm1=hwmon0/fan1_input
      #  MINTEMP=hwmon0/pwm1=50
      #  MAXTEMP=hwmon0/pwm1=70
      #  MINSTART=hwmon0/pwm1=100
      #  MINSTOP=hwmon0/pwm1=10
      #  MINPWM=hwmon0/pwm1=10
      #  MAXPWM=hwmon0/pwm1=240
      #'';

      # File systems must be declared in order to boot

      fileSystems = {
        "/" = {
          device = "/dev/disk/by-uuid/75ba9480-26dc-4602-8797-b1896f829acd";
          fsType = "ext4";
        };

        "/boot" = {
          device = "/dev/disk/by-uuid/D4CC-FF5B";
          fsType = "vfat";
        };
      };
      swapDevices = [{ device = "/dev/disk/by-uuid/08fd16ed-033c-456a-af0e-f16c933f08a3"; }];

      # Secrets must be prepared ahead before deploying
      #passwordHash = inputs.nixpkgs.lib.fileContents ../../misc/password.sha512;

      # Theming

      # Turn on all features related to desktop and graphical applications
      #gui.enable = true;

      # Set the system-wide theme, also used for non-graphical programs
      #theme = {
      #  colors = (import ../../colorscheme/gruvbox-dark).dark;
      #  dark = true;
      #};
      #wallpaper = "${inputs.wallpapers}/gruvbox/road.jpg";
      #gtk.theme.name = inputs.nixpkgs.lib.mkDefault "Adwaita-dark";

      #touchpad.enable = true;
      #fingerprint.enable = true;
      #firefox.enable = true;
      #graphics.enable = true;
      #sound.enable = true;
      #docker.enable = true;
      #bluetooth.enable = true;
      #wayland.enable = true;
      #printers.enable = true;
      #power-management.enable = true;
    }
  ];
}

#name = "bits-nixos";
#NICs = [ "wwp103s0f4u3u3" "wlp4s0" ];
#kernelPackage = pkgs.linuxPackages_latest;
#initrdMods = [ "nvme" "xhci_pci" "thunderbolt" "usb_storage" "sd_mod" "sdhci_pci" ];
#kernelMods = [ "kvm-amd" ];
#kernelParams = [ ];
#systemConfig = {
#  touchpad.enable = true;
#  fingerprint.enable = true;
#  firefox.enable = true;
#  graphics.enable = true;
#  sound.enable = true;
#  docker.enable = true;
#  bluetooth.enable = true;
#  wayland.enable = true;
#  printers.enable = true;
#  power-management.enable = true;
#  diskEncryption = {
#    enable = true;
#    diskId = "f3fd4fdf-b8ef-45c7-8e96-2ca5bfe32cd9";
#    headerId = "1abd4b51-8a97-4d04-97f1-326b2ef1dcbe";
#  };
#  firewall = {
#    enable = true;
#    tcpPorts = [ 8080 ];
#  };
#};
#users = [{
#  name = "birgerrydback";
#  groups = [ "wheel" "networkmanager" "video" "docker" ];
#  uid = 1000;
#  shell = pkgs.bash;
#}];
#cpuCores = 8;
